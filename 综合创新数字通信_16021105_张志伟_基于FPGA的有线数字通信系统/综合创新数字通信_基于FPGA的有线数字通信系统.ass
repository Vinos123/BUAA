[Script Info]
; Script generated by Arctime 1.2
; http://arctime.org/
Title: Default ASS file
ScriptType: v4.00+
WrapStyle: 2
Collisions: Normal
PlayResX: 1280
PlayResY: 720
ScaledBorderAndShadow: yes
Video Zoom Percent: 1
; ----------------------
; ArctimeTrackCount: 3
; ArctimeEncodeMethod: C
; 使用方法C：保持字幕块独立

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,微软雅黑,54,&H00FFFFFF,&H00FFFFFF,&H28533B3B,&H500E0A00,0,0,0,0,100.0,100.0,0.0,0.0,1,3.5546875,3.0,2,100,100,53,1
Style: Default-Box,微软雅黑,54,&H00FFFFFF,&H00FFFFFF,&H23000000,&HFF000000,0,0,0,0,100.0,100.0,0.0,0.0,3,10.0,0.0,2,100,100,53,1
Style: Yahei-1280x720,微软雅黑,40,&H00FFFFFF,&H00FFFFFF,&H28533B3B,&H500E0A00,0,0,0,0,100.0,100.0,0.0,0.0,1,3.5546875,3.0,2,135,135,80,1
Style: Yahei-1920x1080,微软雅黑,60,&H00FFFFFF,&H00FFFFFF,&H28533B3B,&H500E0A00,0,0,0,0,100.0,100.0,0.0,0.0,1,4.5703125,3.0,2,200,200,110,1
Style: OneFX,楷体,54,&H00FFFE67,&H000000FF,&H00A4671B,&H914F310D,-1,-1,-1,0,100.0,120.0,0.0,10.32258,1,5.6910567,4.268293,2,10,10,80,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 2,0:00:03.07,0:00:05.95,Default,,0,0,0,,{\fad(200,200)}这是我们FPGA开发版的整体的结构
Dialogue: 2,0:00:05.95,0:00:11.25,Default,,0,0,0,,{\fad(200,200)}它主要包括开关，FPGA核心板数码管显示装备，还有ADC/DAC模块。
Dialogue: 2,0:00:11.25,0:00:14.95,Default,,0,0,0,,{\fad(200,200)}其中FPGA核心板能够切换三种模式，
Dialogue: 2,0:00:14.95,0:00:19.70,Default,,0,0,0,,{\fad(200,200)}可以通过两个Switch，将它切换为both自发自收、
Dialogue: 2,0:00:19.70,0:00:23.67,Default,,0,0,0,,{\fad(200,200)}receive接收，还有send发射这三种状态。
Dialogue: 2,0:00:23.67,0:00:25.90,Default,,0,0,0,,{\fad(200,200)}通过按键，我们可以切换三种调制/解调方式，
Dialogue: 2,0:00:25.90,0:00:27.58,Default,,0,0,0,,{\fad(200,200)}每种调制方式有对应的LED灯显示，
Dialogue: 2,0:00:27.58,0:00:30.87,Default,,0,0,0,,{\fad(200,200)}LED0、LED1、LED2分别对应ASK、FSK、QPSK
Dialogue: 2,0:00:30.90,0:00:36.52,Default,,0,0,0,,{\fad(200,200)}接下来这个示波器显示的是ASK调制方式出来的正弦的波形，
Dialogue: 2,0:00:36.52,0:00:39.75,Default,,0,0,0,,{\fad(200,200)}我们可以看出它在数据为一的地方，它的峰峰值是5伏，
Dialogue: 2,0:00:39.75,0:00:43.45,Default,,0,0,0,,{\fad(200,200)}数据为零的地方，峰峰值是2.5伏，符合ASK调制波形的特点。
Dialogue: 2,0:00:43.45,0:00:45.60,Default,,0,0,0,,{\fad(200,200)}接下来是经过FSK调制后的波形。
Dialogue: 2,0:00:45.60,0:00:48.55,Default,,0,0,0,,{\fad(200,200)}我们可以看出它在某些地方正弦波的曲线比较细密，
Dialogue: 2,0:00:48.55,0:00:49.62,Default,,0,0,0,,{\fad(200,200)}某些地方比较稀疏，
Dialogue: 2,0:00:49.62,0:00:56.45,Default,,0,0,0,,{\fad(200,200)}这也符合FSK调制的波形特点。
Dialogue: 2,0:00:56.45,0:01:02.02,Default,,0,0,0,,{\fad(200,200)}最后是QPSK，我们可以看出这个波形包含了四个相位不同的正弦波，
Dialogue: 2,0:01:02.02,0:01:06.02,Default,,0,0,0,,{\fad(200,200)}与QPSK中的45度，135度，225度
Dialogue: 2,0:01:06.02,0:01:09.37,Default,,0,0,0,,{\fad(200,200)}和315度的四个相位的角度相吻合。
Dialogue: 2,0:01:09.37,0:01:12.52,Default,,0,0,0,,{\fad(200,200)}以上三种调制方式中，前两种调制方式的载波频率都是25kHz，
Dialogue: 2,0:01:12.52,0:01:14.47,Default,,0,0,0,,{\fad(200,200)}QPSK的载波频率是62.5千赫兹，
Dialogue: 2,0:01:14.47,0:01:17.52,Default,,0,0,0,,{\fad(200,200)}由于前两种调制方式一位数据调制一个载波，
Dialogue: 2,0:01:17.52,0:01:20.77,Default,,0,0,0,,{\fad(200,200)}所以说前两种调制方式传输速率都是25kbps，
Dialogue: 2,0:01:20.77,0:01:27.92,Default,,0,0,0,,{\fad(200,200)}而QPSK的传输速率是125kbps，即0.125Mbps。
Dialogue: 2,0:01:27.92,0:01:31.40,Default,,0,0,0,,{\fad(200,200)}接下来是我们实现图像传输的整体过程。
Dialogue: 2,0:01:31.40,0:01:36.35,Default,,0,0,0,,{\fad(200,200)}首先我们运行这个Matlab程序，这里显示此处我们要传输的图像。
Dialogue: 2,0:01:36.35,0:01:39.27,Default,,0,0,0,,{\fad(200,200)}传输的图像被拆分成数据之后，
Dialogue: 2,0:01:39.27,0:01:40.97,Default,,0,0,0,,{\fad(200,200)}通过UART串口发送到FPGA开发板中，
Dialogue: 2,0:01:40.97,0:01:45.52,Default,,0,0,0,,{\fad(200,200)}我们可以看到他的rx这个小灯在不停地闪烁，证明它在接收数据
Dialogue: 2,0:01:45.52,0:01:50.67,Default,,0,0,0,,{\fad(200,200)}接收到的数据经过调制之后，通过DAC模块转换成模拟信号之后，
Dialogue: 2,0:01:50.67,0:01:53.25,Default,,0,0,0,,{\fad(200,200)}由低频传输线传输到接收板中，
Dialogue: 2,0:01:53.25,0:01:58.22,Default,,0,0,0,,{\fad(200,200)}接收板对信号进行解调之后，通过串口发送到接收端的PC机，
Dialogue: 2,0:01:58.22,0:02:04.70,Default,,0,0,0,,{\fad(200,200)}PC机利用串口调试助手来处理这些经过解调之后的数据。
Dialogue: 2,0:02:04.70,0:02:07.55,Default,,0,0,0,,{\fad(200,200)}我们可以看到这个数据正在间断地刷新，
Dialogue: 2,0:02:07.55,0:02:10.47,Default,,0,0,0,,{\fad(200,200)}证明PC机正在一帧一帧地接收数据。
Dialogue: 2,0:02:11.99,0:02:14.49,Default,,0,0,0,,{\fad(200,200)}现在是数据接收完毕的情况，
Dialogue: 2,0:02:14.49,0:02:17.86,Default,,0,0,0,,{\fad(200,200)}我们点击串口调试助手上“停止保存数据”，
Dialogue: 2,0:02:17.86,0:02:23.80,Default,,0,0,0,,{\fad(200,200)}就可以将它存到一个txt文件中，
Dialogue: 2,0:02:23.80,0:02:26.43,Default,,0,0,0,,{\fad(200,200)}最后利用Matlab读取这个txt文件中所有的数据，
Dialogue: 2,0:02:26.43,0:02:29.61,Default,,0,0,0,,{\fad(200,200)}运用与图像读入时相反的操作，将它恢复成原来的图像即可。
Dialogue: 2,0:02:29.61,0:02:38.53,Default,,0,0,0,,{\fad(200,200)}我们为此设计了一个GUI，这个是我们最终展示的成果，
Dialogue: 2,0:02:38.53,0:02:44.73,Default,,0,0,0,,{\fad(200,200)}可以看出，传输后的图像与原图像相差并不大，
Dialogue: 2,0:02:44.73,0:02:48.02,Default,,0,0,0,,{\fad(200,200)}误码率也比较低，约为0.02。
Dialogue: 2,0:02:49.12,0:02:53.62,Default,,0,0,0,,{\fad(200,200)}无线部分使用信号源产生的正弦信号来测试
Dialogue: 2,0:02:53.62,0:02:55.85,Default,,0,0,0,,{\fad(200,200)}接收端天线收到的信号
Dialogue: 2,0:02:55.85,0:02:58.30,Default,,0,0,0,,{\fad(200,200)}发射机采用调幅的方式将信号加载到315MHz的载频上
Dialogue: 2,0:02:58.30,0:03:04.17,Default,,0,0,0,,{\fad(200,200)}先后经滤波、放大和包络检波之后
Dialogue: 2,0:03:04.17,0:03:07.97,Default,,0,0,0,,{\fad(200,200)}通过示波器进行测试。
Dialogue: 2,0:03:08.35,0:03:12.47,Default,,0,0,0,,{\fad(200,200)}调整发射机天线的角度，接收端信号的幅度随之发生变化。
Dialogue: 2,0:03:14.67,0:03:18.95,Default,,0,0,0,,{\fad(200,200)}改变信号源频率，接收端信号频率随之发生变化。
Dialogue: 2,0:03:18.95,0:03:22.44,Default,,0,0,0,,{\fad(200,200)}但是由于电路存在较大的噪声，
Dialogue: 2,0:03:22.44,0:03:23.82,Default,,0,0,0,,{\fad(200,200)}当用FPGA实验板的DA输出信号替换信号源时， 
Dialogue: 2,0:03:23.82,0:03:26.60,Default,,0,0,0,,{\fad(200,200)}接收端恢复出的数据误码率较大。